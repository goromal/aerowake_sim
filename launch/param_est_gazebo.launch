<launch>
  <!-- Parameters -->
  <arg name="mav_name"      default="aerowake_MIT"/>
  <arg name="sim_param"     default="aerowake_MIT"/>
  <arg name="control_param" default="milestone_2_gains"/>
  <arg name="ekf_param"     default="mit-uav-mocap"/>
  <arg name="motor_param"   default="mit-uav-motor"/>
  <arg name="frame_param"   default="mit-uav-frame"/>
  <arg name="pest_param"    default="mit-uav-ukf"/>
  <!-- FIRMWARE BRANCH: aerowake-no-rc -->

  <!-- Parameter Files -->
  <arg name="sim_paramfile"     default="$(find aerowake_params)/params/sim/$(arg sim_param).yaml"/>
  <arg name="control_paramfile" default="$(find aerowake_params)/params/controller/$(arg control_param).yaml"/>
  <arg name="ekf_paramfile"     default="$(find aerowake_params)/params/ekf/$(arg ekf_param).yaml"/>
  <arg name="motor_paramfile"   default="$(find aerowake_params)/params/motor/$(arg motor_param).yaml"/>
  <arg name="frame_paramfile"   default="$(find aerowake_params)/params/frame/$(arg frame_param).yaml"/>
  <arg name="pest_paramfile"    default="$(find aerowake_params)/params/param-est/$(arg pest_param).yaml"/>

  <!-- Simulation Environment -->
  <include file="$(find aerowake_sim)/launch/gazebo_sim.launch">
    <arg name="mav_name"   value="$(arg mav_name)"/>
    <arg name="param_file" value="$(arg sim_paramfile)"/>
    <arg name="motor_file" value="$(arg motor_paramfile)"/>
    <arg name="frame_file" value="$(arg frame_paramfile)"/>
    <arg name="auto_imu"   value="true"/>
  </include>

  <!-- FCU communication -->
  <node name="rosflight_io" pkg="rosflight" type="rosflight_io" output="screen">
    <param name="udp" value="true"/>
  </node>

  <!-- Estimator -->
  <node name="estimator" pkg="roscopter" type="ekf_node" output="screen">
    <rosparam command="load" file="$(arg ekf_paramfile)"/>
    <remap from="imu" to="imu/data"/>
    <remap from="reference" to="$(arg mav_name)/truth/NED"/>
    <remap from="odom" to="odometry"/>
  </node>

  <!-- Control -->
  <node name="controller" pkg="roscopter" type="controller" output="screen">
    <rosparam command="load" file="$(arg control_paramfile)"/>
    <remap from="estimate" to="odometry"/>
  </node>

  <!-- Motor Speed Calculator -->
  <node name="motor_speed" pkg="aerowake_utils" type="msc_grasp.py" output="screen">
    <rosparam command="load" file="$(arg motor_paramfile)"/>
    <remap from="signals" to="output_raw"/>
    <remap from="motor_speeds" to="motor_omegas"/>
  </node>

  <!-- Odometry Transformer -->
  <node name="odometry_transformer" pkg="aerowake_utils" type="pose_publisher.py" output="screen">
    <remap from="input_odom" to="odometry"/>
    <remap from="output_pose" to="pose_est"/>
  </node>

  <!-- Parameter Estimator -->
  <node pkg="geom_inertia_estimator" type="geom_inertia_estimator"
        name="geom_inertia_estimator" output="screen">
      <rosparam command="load" file="$(arg pest_paramfile)"/>
      <rosparam command="load" file="$(arg sim_paramfile)"/>
      <remap from="RImu/Omega/x" to="gyro_stdev"/>
      <remap from="RImu/Omega/y" to="gyro_stdev"/>
      <remap from="RImu/Omega/z" to="gyro_stdev"/>
      <remap from="RImu/a/x" to="acc_stdev"/>
      <remap from="RImu/a/y" to="acc_stdev"/>
      <remap from="RImu/a/z" to="acc_stdev"/>
      <param name="useEKF" value="0"/>
      <remap from="~pose" to="pose_est"/>
      <remap from="~imu"  to="imu/data"/>
      <remap from="~rpm"  to="motor_omegas"/>
  </node>

  <!-- Flight GUI for high-level commands and tuning -->
  <include file="$(find aerowake_tuning_gui)/launch/tuning_gui.launch"/>

</launch>
